local M = {}

function M.config()
    local db = require("dashboard")
    db.custom_header = {
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢁⣰⢉⣱⣿⣿⠉⢁⣾⣿⡿⢏⣰⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠰⠶⡆⠰⠄⠄⠉⠉⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢰⣾⠹⢿⣷⡆⢷⣶⣸⣿⣿⣿⣿⡿⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⣿⣿⡏⢁⡏⢁⣿⣿⡿⢏⣾⣿⣿⡿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠄⢈⡉⣏⣩⠄⠄⠄⠄⠄⠄⠄⠰⠆⠄⠄⠄⠄⢀⠸⠿⣇⣈⢹⣷⠘⢹⣿⣿⡏⠉⠁⢀⠄⠄⠄⠄⣀⡈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠉⠄⠄⠄⠄⠈⠁⢰⡆⣴⣾⣿⡏⣴⣾⣿⣿⠃⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡗⢸⡗⡟⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⣤⡌⠙⣶⡆⠙⢻⣾⣿⡆⠐⡟⠛⠄⠄⠄⠄⠄⠄⠄⠄⡇⢸⣦⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠃⠄⠄⠄⠄⠄⠄⠄⠄⢡⣼⣿⣿⢡⣼⣿⣿⡟⠋⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠛⠛⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠈⠁⠃⠄⠄⠄⠄⠄⠄⠄⢠⣤⡆⢠⠐⠊⠃⢠⡌⠉⠂⠄⠛⢻⠁⠄⠁⢠⢠⣴⣴⣦⣯⣽⢺⡇⣷⣾⣿⣿⣿⣯⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠄⠄⠄⠄⠄⠄⠄⠄⠂⠄⢸⣿⣿⡟⢸⣿⣿⡏⣵⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠋⠉⠉⠁⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠄⠄⠄⠄⠄⢠⣤⣼⣿⣿⣿⣿⣿⣿⣷⡄⠄⠄⠐⢲⣶⠄⠐⣤⡄⢰⡖⡍⢹⣽⡏⡟⢻⣿⣯⣿⣿⣿⣿⣿⣿⣷⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⣿⣿⡏⢡⣿⣿⡇⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⠈⠁⡅⠄⠊⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠁⠉⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣦⣼⣿⣿⠃⢸⣿⡟⢰⡞⠛⢻⣿⣿⣿⣿⣿⣿⣿⣿⣤⡄⠄⠄⠄⠄⠄⠄⠄⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡄⣷⣦⠄⠄⢠⡄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠿⢿⣿⡏⣸⣿⠁⠄⠁⠄⠄⠄⠄⠄⠛⢻⣿⣿⣿⣿⣿⡗⣀⣠⡀⠄⠄⠄⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⠻⠿⣿⣿⣿⡟⠛⢻⠛⠛⡟⠛⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢹⣿⡆⠄⠁⠄⣷⣶⢰⣶⣦⡄⠄⢐⠄⠄⣀⣀⣤⣤⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⠛⠋⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⡇⡿⠏⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⢿⣿⣿⣿⢏⣡⣿⣿⣷⣦⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⠈⠉⣿⣿⣿⣿⣿⡟⠄⠄⡿⠿⢿⡧⠤⢼⠄⠄⡇⠄⢸⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⢸⡟⠇⠄⠄⠄⠉⠙⠎⠉⠉⠁⠄⠈⠄⠄⠙⠛⠛⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⡆⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⣼⣿⡇⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠸⢿⡿⠏⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⢿⡿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠛⠛⢻⠛⠋⡉⠉⢹⡏⠉⢩⠉⠉⡏⠉⢡⡌⠉⢹⠍⠉⠉⠉⠹⢿⠄⠄⣭⣽⣿⣿⣿⣷⠄⠄⡇⠄⢸⡇⠄⢸⠄⠄⡇⠄⢸⣿⣿⣿⣿⣿⠄⢀⡆⠄⣰⡆⠈⢹⠛⠋⡄⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠓⠘⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠒⠂⠂⠄⠄⠄⠄⠄⠈⠉⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣧⣤⣀⣀⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⢻⣿⡇⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠃⢰⣿⣿⣿⣿⣿⣿⣿⣿⡏⠉⢹⡇⠉⢹⠈⠁⡄⠈⢹⡏⠉⢹⠉⠉⣿⣿⣿⣿⡇⠄⢰⡆⠄⢸⣤⡤⠁⠄⢘⡃⠄⢸⠄⠄⡇⠄⢸⡇⠄⢸⠄⠄⣲⡆⠐⢚⠄⠄⣿⣿⣿⣿⣿⣿⠄⠄⠁⠠⢼⡇⠄⢸⠄⠄⠧⠄⠸⢿⣿⣿⣿⣿⠄⠈⡇⠄⢹⡇⠄⢸⠄⠄⠇⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠏⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⡿⠇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⡀⣰⣾⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⢸⡇⠄⢈⠄⠄⡇⠄⢸⡇⠄⢸⠄⠄⣿⣿⣿⣿⡇⠄⢸⣷⣶⣾⠉⠁⡀⠄⠸⠇⠄⢸⠄⠄⡇⠄⢸⡇⠄⠨⠄⠄⠍⠁⠠⢼⠄⠄⣿⣿⣿⣿⣿⣿⠄⠄⡆⠄⢘⡃⠄⢘⡀⠄⢲⡆⠄⢸⣿⣿⣿⣿⠄⠄⡇⠄⢸⡇⠄⢸⠄⠄⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠛⣀⣀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡄⠄⠄⠄⠄⠄⠄⠈⠉⠉⠉⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⢐⣲⣶⣶⣶⡾⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⢌⡁⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢀⠸⠇⠄⢸⠄⠄⡇⠄⢸⡇⠄⠸⠄⠄⣿⣿⣿⣿⡇⠄⠸⠏⠉⠹⠄⠄⠇⠄⢐⡂⠄⢸⠄⠄⡇⠄⢸⣇⠄⢰⠄⠄⢒⣂⣰⣾⠄⠄⣿⣿⣿⣿⣿⣿⠄⠄⡇⠄⢸⡇⠄⢨⡅⠄⢸⡇⠄⢸⣿⣿⣿⣿⠄⠄⣇⡀⢸⣇⠄⢸⡄⢀⣛⣋⣙⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠁⠄⠉⠉⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠃⠄⠄⠄⠄⠄⠠⢄⠄⠄⠄⠄⠰⠾⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠇⠄⠄⠄⢀⣿⣿⣿⣿⠟⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⡄⣟⣻⢻⣇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⡀⠄⢸⠄⠄⢃⣠⣸⡇⠄⠄⠄⠄⣿⣿⣿⣿⣇⣀⣀⣀⣀⣸⣤⣤⣤⣤⣼⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣧⣤⣼⣿⣿⣿⣿⣤⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠄⠄⠄⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠄⠄⠄⠄⢸⣿⣿⣿⡿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⡇⡿⢿⢘⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠇⣀⣸⣿⣿⣿⣿⣿⣿⣿⣧⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⠛⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⠃⠘⠘⠃⠃⠄⡃⢀⠻⢿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⣸⣿⣿⡿⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⡇⡟⢻⣿⡧⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣠⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⢀⣿⣿⡿⠇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣘⡃⡃⢸⢸⡿⡘⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠛⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠄⠘⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⡄⠄⠄⡀⠄⣀⡀⠄⠄⣼⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⠄⠄⠄⢸⣿⣿⠇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠸⢾⡷⡀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⢸⡏⠉⢉⠉⠉⣿⣿⣿⣿⣿⡇⠄⢰⠄⠈⣿⣿⣿⣿⣿⡏⢿⣿⣿⣿⡿⠿⢿⡿⠉⠉⠉⠉⡏⠉⢹⡏⠉⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⢀⡀⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠰⠆⠶⠶⠄⠄⠄⠄⠄⠄⠄⠄⢰⣆⡿⠏⣈⣉⣰⣾⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⡏⠉⠉⠉⠄⠄⠄⠄⢿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠸⠇⡇⠄⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⢸⡇⠄⢰⠄⠄⢾⣿⣿⣿⣿⣿⡇⠄⠄⠄⣿⣿⣿⣿⡷⠆⢸⣿⣿⣿⡇⠄⢸⣷⣶⡾⠄⠄⡆⠄⠸⠇⠄⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⠈⠁⠄⠄⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡀⢸⢈⣁⣿⣷⡀⠄⠄⠄⠄⠄⢈⣹⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⡿⠄⠄⠄⠄⠄⠄⠄⠄⢸⣇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠇⢸⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⢀⡀⠄⠈⠄⠄⣾⣿⣿⣿⡿⠇⠄⢰⠄⠄⣿⣿⣿⣿⣿⡇⢸⣿⠹⠿⡇⠄⢸⡏⠁⠄⠄⠄⡇⠄⠄⠄⠄⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠄⠄⠄⢀⡀⠄⢀⣀⣇⣀⡀⠄⠄⠄⣶⡶⣀⣰⡀⠄⠄⠄⠄⠄⠄⠄⢸⣷⣇⣸⣿⣿⣿⣿⣷⣆⡀⢀⣰⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⣿⣿⡆⠄⣶⣶⠆⢀⠄⠄⠄⠄⠄⠄⣀⣰⣶⡆⢰⣶⡀⠄⠄⠈⣀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠄⠄⠄⠄⢀⠄⠄⣿⣿⣿⣿⣿⡇⠄⠸⠄⠄⣿⣿⣿⣿⣿⡇⠰⠾⠄⠄⠇⠄⢸⡇⠄⠄⠄⠄⣿⣷⣶⣆⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣆⣀⡈⠄⢈⣿⣏⣉⣹⣏⣁⣀⣸⣿⣇⡆⠄⠄⢀⢰⡆⠄⠄⠄⠄⢾⣷⢿⡿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠁⠄⢹⡏⢸⣏⣹⣿⡇⢸⣿⣿⣿⣿⣿⡇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣾⣷⣶⣾⣾⣿⣿⣿⣿⣿⣿⣷⣷⣶⣶⣶⣿⣿⣿⣿⣿⣷⣶⣶⣿⣿⣆⣰⣸⣷⣆⣰⣶⣶⣿⡿⠿⠿⢀⣀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠏⠄⠄⠄⠄⠇⠄⠄⠄⠄⠈⠹⢿⣿⣿⣇⣀⡿⠏⠈⠁⠄⠄⠁⠄⣏⣹⣿⣿⢹⣿⣏⣹⠹⢿⣿⣏⠹⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⡏⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣧⠄⠄⣿⣿⢰⣾⣿⣿⣿⣿⡟⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣦⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠄⠄⠁⠄⠄⠄⢠⡄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠉⠁⠄⠄⠄⠄⠄⠄⠄⠓⠊⠊⠙⠄⠄⢸⡏⡆⠘⣿⣿⢳⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⡏⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡌⢱⠂⢠⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⣿⣿⡇⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠁⠄⠄⡄⠄⠈⢩⣭⡅⠈⠙⠛⠛⠉⢩⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⡏⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⣶⡆⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⣿⣿⠁⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠉⢩⣽⣿⡇⠉⢹⣿⣿⣿⣿⣿⣿⣿⣿⠃⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠘⣿⣿⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢻⣿⡟⢻⠛⠛⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢲⡆⠄⠄⠄⠈⠄⠄⢰⣦⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡍⢹⣧⣼⢰⡆⡄⠄⢸⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠈⡟⠃⠄⠈⠉⠉⡏⠉⠉⠉⠉⠉⡄⠄⢠⣴⣿⣿⣿⣿⣿⡏⠉⢡⡌⠉⣤⡌⠙⢻⠉⠉⣭⡍⢹⣿⠄⠄⣼⣿⠄⠄⣴⣾⡟⠛⠁⠄⠄⢸⠄⠄⣶⣾⡄⠄⢰⣦⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠐⠒⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠁⠄⠄⡇⠄⠄⠄⢸⣧⡄⠄⠄⠄⠄⠄⠈⠉⠄⠄⠄⠄⢠⣼⣽⣿⣷⡞⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⡿⠏⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⣹⣿⣐⡂⣆⣠⡛⠻⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⡿⠟⠛⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠠⢼⡯⠅⠄⢸⠄⠄⣷⣶⠾⠇⠄⠄⡇⠄⢸⣿⣿⣿⣿⣿⣿⡇⠄⢸⡂⠄⣾⡇⠄⢸⣶⣶⠇⠄⢘⣻⠄⠄⣿⣿⡆⠄⣿⣿⡇⠄⠸⠇⠄⢸⠄⠄⢿⣿⣧⣤⣌⡉⠛⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠐⠊⠁⠄⠄⢠⡿⢿⣇⡀⠄⠄⠄⠐⠄⢀⢀⡀⣀⣐⣆⣸⣺⣿⣿⣧⡹⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⡇⠄⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠈⠙⠛⢽⡇⡯⢽⠅⢰⢹⣿⣿⣿⢸⣿⣿⣿⣿⣿⠁⠄⠄⠄⠈⠉⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⡀⠄⢸⣷⡆⠄⢘⠄⠄⡟⠛⠄⠄⠄⠄⡇⠄⢸⣿⣿⣿⣿⣿⣿⡇⠄⢸⡇⠄⢽⡇⠄⢸⠉⠉⠠⠄⠨⢽⠄⠄⣿⣿⡇⠄⣿⣿⡇⠄⢠⣤⣶⣾⠄⠄⢺⣿⣿⣿⣿⡇⠄⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠄⠄⠄⠄⠄⠄⠄⠰⢀⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠂⢐⠐⠂⠄⠄⡀⠘⣃⣈⢻⡇⠄⠄⠂⠄⠄⢘⢨⡥⢩⣍⣿⣿⣿⣿⣽⣿⡧⢼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠸⠇⣇⣸⡶⢾⢸⡏⡻⠿⠈⢹⣿⣿⣿⡿⠄⠄⠄⠄⠄⠄⠘⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⢸⣿⡇⠄⠨⠄⠄⠁⠄⠄⠠⠄⠄⡇⠄⢸⣿⣿⣿⣿⣿⣿⡇⠄⢸⡇⠄⣺⡇⠄⢸⠄⠄⢠⡄⠄⢸⠄⠄⣿⣿⡇⠄⣿⣿⡇⠄⢸⡟⠛⢻⡂⠄⢸⣿⡏⠉⠙⠃⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣀⣀⠄⠄⠄⠄⠄⠄⠈⠁⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠈⢀⣠⢰⡆⡇⢀⠉⢹⠨⠅⠠⠄⠄⠄⠄⢸⢨⡥⣾⣏⡯⢽⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠂⠛⠋⠁⠘⢸⡇⡃⠄⠄⠘⣿⣿⣿⣷⠄⠄⠄⠄⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⡀⠘⢿⣇⣀⣰⣀⣀⣰⣆⣀⣀⣀⣀⣇⣠⣈⣙⣿⣿⣿⣿⣿⣧⣀⣸⣇⣠⣿⣇⣤⣼⣆⣀⣈⣡⣤⣼⣤⣤⣭⣽⣧⣤⣭⣽⣧⣤⣬⣥⣤⣼⣧⣤⢼⣿⣧⣴⣶⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣤⡄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⣤⣦⡄⢺⣿⢸⡇⠇⠸⡄⠘⠄⠄⢐⡂⣖⣲⡂⢸⣺⣗⣿⣿⣗⣺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⠇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠄⠨⠅⠁⢠⣤⡄⢹⣿⣿⣿⠄⠄⠄⠄⢀⣠⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣶⣶⣶⡆⠄⡆⠄⡂⢀⢀⣀⢸⣿⣿⣷⣸⣿⡈⠁⢰⡆⢱⣦⠄⠄⠸⠗⣿⣿⡇⢸⢿⡯⣿⣿⣿⣿⣿⣿⣽⣿⡟⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠂⠄⠄⠄⠄⠄⠄⢀⢠⣤⣶⣾⣿⣇⢸⣿⣿⣿⣶⣶⣶⡆⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡆⠣⠄⠁⠈⠈⠉⢸⡏⣯⡽⡏⠙⣧⡄⠨⠅⡌⢹⣶⡦⠠⠄⠏⠉⠃⢸⢾⣷⣿⣿⣿⣿⣿⣿⣿⣿⣧⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⠄⠘⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⣀⡀⠄⠄⠄⠄⠠⡇⠸⠄⠸⣿⣿⣿⣿⠄⢸⣿⣿⣿⣿⣿⡇⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠄⠄⠄⠄⠄⠘⠃⠛⠛⣟⣣⣸⣇⠘⠃⡃⠄⠃⠄⠄⠄⠄⠄⠛⢛⢸⡟⣻⣿⣟⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⣸⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⢻⣿⣿⣿⣧⡄⣿⣿⣿⣿⣿⣇⠸⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠄⠄⠄⠄⠄⠛⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⢠⡤⣀⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠄⡄⢸⢼⡿⢼⡿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⠄⠄⠄⠄⣀⣀⣀⣀⣀⣀⣀⣸⠄⠄⠄⠄⠄⠘⢻⣿⣿⣇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠸⡿⢿⣿⡇⢿⣿⣿⣿⣿⣿⡇⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⣿⣿⡿⠿⢿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⡀⢠⢸⣿⠿⠇⠄⠄⠄⢀⠄⠄⠄⠄⠃⠄⠄⠄⠄⠄⠃⠘⠛⢛⠘⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣧⣤⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠄⠄⠄⠄⠠⠄⠸⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠿⠇⠘⢻⠟⠛⠛⠛⠃⠄⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠘⠣⢠⡤⡿⢿⣿⣿⣿⣿⠄⠄⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⠛⢛⡛⠛⠃⠄⠄⠄⠄⣸⣿⢃⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⡤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⢀⢀⡀⣿⣿⡀⠄⠄⠄⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠛⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡀⠄⠄⠄⠄⠄⠄⠄⣃⣸⣿⣿⣿⡟⠄⠄⠄⠄⠄⠠⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣤⡤⠧⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⣸⣧⣿⣿⣟⣛⢿⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⢸⣾⡷⠸⢿⡿⠇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠰⠾⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠉⠉⠉⠹⣹⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣆⢰⣶⣶⣾⣿⣿⣿⡿⠇⠄⠄⠄⠄⠄⠄⠄⠈⠁⠇⠸⠹⠿⢸⣷⣿⣿⣿⣿⢸⣿⣏⡁⠁⠄⠄⠄⢀⣈⡇⠄⠄⠄⠄⠄⠄⠄⣆⣸⣿⣿⣿⣿⡿⢿⢸⣿⣿⣿⣿⣿⣿⣿",
        "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠄⠄⠸⣿⣇⡆⠸⠄⠄⠄⠄⠄⠄⠄⠄⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⡀⠁⠄⠄⢀⢀⣀⢈⡉⠉⠹⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⠁⠄⠄⠄⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣸⣿⣿⣿⠏⠉⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠁⠄⠄⡁⢈⠈⠉⢿⡏⡇⠈⠄⠄⠄⠄⠄⠄⠄⠄⢸⡇⡇⠄⠄⠄⢰⣶⢶⡆⡿⢿⣿⣿⣿⣷⣁⣰⣾⣿⣿⣿⣿⣿⣿⣿",
        "",
    }
    db.custom_center = {
        {
            icon = "  ",
            desc = "Open last session                     ",
            shortcut = "SCP s l",
            action = "SessionLoad",
        },
        {
            icon = "  ",
            desc = "Recently opened files                 ",
            shortcut = "SPC f h",
            action = "Telescope oldfiles",
        },
        {
            icon = "  ",
            desc = "Find file                             ",
            shortcut = "SPC f f",
            action = "Telescope find_files find_command=rg,--hidden,--files",
        },
        {
            icon = "  ",
            desc = "Find word                             ",
            shortcut = "SPC f a",
            action = "Telescope live_grep",
        },
        {
            icon = "  ",
            desc = "New file                              ",
            shortcut = "SPC c n",
            action = "DashboardNewFile",
        },
        {
            icon = "  ",
            desc = "File browser                          ",
            shortcut = "SPC f w",
            action = "Telescope find_files",
        },
        {
            icon = "  ",
            desc = "Change colorscheme                    ",
            shortcut = "SPC t c",
            action = "Telescope colorscheme",
        },
    }
    db.custom_footer = {
        "Neovim started in " .. Startup_Time() .. " ms",
        "Neovim loaded " .. #vim.tbl_keys(packer_plugins) .. " plugins"
    }
end

-- Stolen from nvim-startuptime
function Startup_Time()
    local startup_file_path = "/tmp/startuptime"
    local startup_time_pattern = "([%d.]+)  [%d.]+: [-]+ NVIM STARTED [-]+"

    local startup_time_file = io.open(startup_file_path) and io.open(startup_file_path):read "*all" or nil

    local startup_time = startup_file_path and tonumber(startup_time_file:match(startup_time_pattern)) or nil

    io.open(startup_file_path, "w"):close()

    if startup_time ~= nil then
        return startup_time
    else
        return "unknown"
    end
end

return M
